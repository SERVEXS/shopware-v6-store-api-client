<?php
/**
 * SalesChannelContextAllOfSalesChannel
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  ServeXS\Shopware\v6\Store
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Shopware Store API
 *
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Store API
 *
 * The version of the OpenAPI document: 6.4.9999999.9999999-dev
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace ServeXS\Shopware\v6\Store\Model;

use \ArrayAccess;
use \ServeXS\Shopware\v6\Store\ObjectSerializer;

/**
 * SalesChannelContextAllOfSalesChannel Class Doc Comment
 *
 * @category Class
 * @description Information about the current sales channel
 * @package  ServeXS\Shopware\v6\Store
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class SalesChannelContextAllOfSalesChannel implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'SalesChannelContext_allOf_salesChannel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'type_id' => 'string',
        'language_id' => 'string',
        'currency_id' => 'string',
        'payment_method_id' => 'string',
        'shipping_method_id' => 'string',
        'country_id' => 'string',
        'navigation_category_id' => 'string',
        'navigation_category_depth' => 'int',
        'footer_category_id' => 'string',
        'service_category_id' => 'string',
        'name' => 'string',
        'short_name' => 'string',
        'access_key' => 'string',
        'active' => 'bool',
        'maintenance' => 'bool',
        'maintenance_ip_whitelist' => 'string',
        'mail_header_footer_id' => 'string',
        'customer_group_id' => 'string',
        'hreflang_active' => 'bool',
        'hreflang_default_domain_id' => 'string',
        'analytics_id' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'type_id' => null,
        'language_id' => null,
        'currency_id' => null,
        'payment_method_id' => null,
        'shipping_method_id' => null,
        'country_id' => null,
        'navigation_category_id' => null,
        'navigation_category_depth' => 'int32',
        'footer_category_id' => null,
        'service_category_id' => null,
        'name' => null,
        'short_name' => null,
        'access_key' => null,
        'active' => null,
        'maintenance' => null,
        'maintenance_ip_whitelist' => null,
        'mail_header_footer_id' => null,
        'customer_group_id' => null,
        'hreflang_active' => null,
        'hreflang_default_domain_id' => null,
        'analytics_id' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'type_id' => 'typeId',
        'language_id' => 'languageId',
        'currency_id' => 'currencyId',
        'payment_method_id' => 'paymentMethodId',
        'shipping_method_id' => 'shippingMethodId',
        'country_id' => 'countryId',
        'navigation_category_id' => 'navigationCategoryId',
        'navigation_category_depth' => 'navigationCategoryDepth',
        'footer_category_id' => 'footerCategoryId',
        'service_category_id' => 'serviceCategoryId',
        'name' => 'name',
        'short_name' => 'shortName',
        'access_key' => 'accessKey',
        'active' => 'active',
        'maintenance' => 'maintenance',
        'maintenance_ip_whitelist' => 'maintenanceIpWhitelist',
        'mail_header_footer_id' => 'mailHeaderFooterId',
        'customer_group_id' => 'customerGroupId',
        'hreflang_active' => 'hreflangActive',
        'hreflang_default_domain_id' => 'hreflangDefaultDomainId',
        'analytics_id' => 'analyticsId'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'type_id' => 'setTypeId',
        'language_id' => 'setLanguageId',
        'currency_id' => 'setCurrencyId',
        'payment_method_id' => 'setPaymentMethodId',
        'shipping_method_id' => 'setShippingMethodId',
        'country_id' => 'setCountryId',
        'navigation_category_id' => 'setNavigationCategoryId',
        'navigation_category_depth' => 'setNavigationCategoryDepth',
        'footer_category_id' => 'setFooterCategoryId',
        'service_category_id' => 'setServiceCategoryId',
        'name' => 'setName',
        'short_name' => 'setShortName',
        'access_key' => 'setAccessKey',
        'active' => 'setActive',
        'maintenance' => 'setMaintenance',
        'maintenance_ip_whitelist' => 'setMaintenanceIpWhitelist',
        'mail_header_footer_id' => 'setMailHeaderFooterId',
        'customer_group_id' => 'setCustomerGroupId',
        'hreflang_active' => 'setHreflangActive',
        'hreflang_default_domain_id' => 'setHreflangDefaultDomainId',
        'analytics_id' => 'setAnalyticsId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'type_id' => 'getTypeId',
        'language_id' => 'getLanguageId',
        'currency_id' => 'getCurrencyId',
        'payment_method_id' => 'getPaymentMethodId',
        'shipping_method_id' => 'getShippingMethodId',
        'country_id' => 'getCountryId',
        'navigation_category_id' => 'getNavigationCategoryId',
        'navigation_category_depth' => 'getNavigationCategoryDepth',
        'footer_category_id' => 'getFooterCategoryId',
        'service_category_id' => 'getServiceCategoryId',
        'name' => 'getName',
        'short_name' => 'getShortName',
        'access_key' => 'getAccessKey',
        'active' => 'getActive',
        'maintenance' => 'getMaintenance',
        'maintenance_ip_whitelist' => 'getMaintenanceIpWhitelist',
        'mail_header_footer_id' => 'getMailHeaderFooterId',
        'customer_group_id' => 'getCustomerGroupId',
        'hreflang_active' => 'getHreflangActive',
        'hreflang_default_domain_id' => 'getHreflangDefaultDomainId',
        'analytics_id' => 'getAnalyticsId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['type_id'] = $data['type_id'] ?? null;
        $this->container['language_id'] = $data['language_id'] ?? null;
        $this->container['currency_id'] = $data['currency_id'] ?? null;
        $this->container['payment_method_id'] = $data['payment_method_id'] ?? null;
        $this->container['shipping_method_id'] = $data['shipping_method_id'] ?? null;
        $this->container['country_id'] = $data['country_id'] ?? null;
        $this->container['navigation_category_id'] = $data['navigation_category_id'] ?? null;
        $this->container['navigation_category_depth'] = $data['navigation_category_depth'] ?? null;
        $this->container['footer_category_id'] = $data['footer_category_id'] ?? null;
        $this->container['service_category_id'] = $data['service_category_id'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['short_name'] = $data['short_name'] ?? null;
        $this->container['access_key'] = $data['access_key'] ?? null;
        $this->container['active'] = $data['active'] ?? null;
        $this->container['maintenance'] = $data['maintenance'] ?? null;
        $this->container['maintenance_ip_whitelist'] = $data['maintenance_ip_whitelist'] ?? null;
        $this->container['mail_header_footer_id'] = $data['mail_header_footer_id'] ?? null;
        $this->container['customer_group_id'] = $data['customer_group_id'] ?? null;
        $this->container['hreflang_active'] = $data['hreflang_active'] ?? null;
        $this->container['hreflang_default_domain_id'] = $data['hreflang_default_domain_id'] ?? null;
        $this->container['analytics_id'] = $data['analytics_id'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets type_id
     *
     * @return string|null
     */
    public function getTypeId()
    {
        return $this->container['type_id'];
    }

    /**
     * Sets type_id
     *
     * @param string|null $type_id type_id
     *
     * @return self
     */
    public function setTypeId($type_id)
    {
        $this->container['type_id'] = $type_id;

        return $this;
    }

    /**
     * Gets language_id
     *
     * @return string|null
     */
    public function getLanguageId()
    {
        return $this->container['language_id'];
    }

    /**
     * Sets language_id
     *
     * @param string|null $language_id language_id
     *
     * @return self
     */
    public function setLanguageId($language_id)
    {
        $this->container['language_id'] = $language_id;

        return $this;
    }

    /**
     * Gets currency_id
     *
     * @return string|null
     */
    public function getCurrencyId()
    {
        return $this->container['currency_id'];
    }

    /**
     * Sets currency_id
     *
     * @param string|null $currency_id currency_id
     *
     * @return self
     */
    public function setCurrencyId($currency_id)
    {
        $this->container['currency_id'] = $currency_id;

        return $this;
    }

    /**
     * Gets payment_method_id
     *
     * @return string|null
     */
    public function getPaymentMethodId()
    {
        return $this->container['payment_method_id'];
    }

    /**
     * Sets payment_method_id
     *
     * @param string|null $payment_method_id payment_method_id
     *
     * @return self
     */
    public function setPaymentMethodId($payment_method_id)
    {
        $this->container['payment_method_id'] = $payment_method_id;

        return $this;
    }

    /**
     * Gets shipping_method_id
     *
     * @return string|null
     */
    public function getShippingMethodId()
    {
        return $this->container['shipping_method_id'];
    }

    /**
     * Sets shipping_method_id
     *
     * @param string|null $shipping_method_id shipping_method_id
     *
     * @return self
     */
    public function setShippingMethodId($shipping_method_id)
    {
        $this->container['shipping_method_id'] = $shipping_method_id;

        return $this;
    }

    /**
     * Gets country_id
     *
     * @return string|null
     */
    public function getCountryId()
    {
        return $this->container['country_id'];
    }

    /**
     * Sets country_id
     *
     * @param string|null $country_id country_id
     *
     * @return self
     */
    public function setCountryId($country_id)
    {
        $this->container['country_id'] = $country_id;

        return $this;
    }

    /**
     * Gets navigation_category_id
     *
     * @return string|null
     */
    public function getNavigationCategoryId()
    {
        return $this->container['navigation_category_id'];
    }

    /**
     * Sets navigation_category_id
     *
     * @param string|null $navigation_category_id navigation_category_id
     *
     * @return self
     */
    public function setNavigationCategoryId($navigation_category_id)
    {
        $this->container['navigation_category_id'] = $navigation_category_id;

        return $this;
    }

    /**
     * Gets navigation_category_depth
     *
     * @return int|null
     */
    public function getNavigationCategoryDepth()
    {
        return $this->container['navigation_category_depth'];
    }

    /**
     * Sets navigation_category_depth
     *
     * @param int|null $navigation_category_depth navigation_category_depth
     *
     * @return self
     */
    public function setNavigationCategoryDepth($navigation_category_depth)
    {
        $this->container['navigation_category_depth'] = $navigation_category_depth;

        return $this;
    }

    /**
     * Gets footer_category_id
     *
     * @return string|null
     */
    public function getFooterCategoryId()
    {
        return $this->container['footer_category_id'];
    }

    /**
     * Sets footer_category_id
     *
     * @param string|null $footer_category_id footer_category_id
     *
     * @return self
     */
    public function setFooterCategoryId($footer_category_id)
    {
        $this->container['footer_category_id'] = $footer_category_id;

        return $this;
    }

    /**
     * Gets service_category_id
     *
     * @return string|null
     */
    public function getServiceCategoryId()
    {
        return $this->container['service_category_id'];
    }

    /**
     * Sets service_category_id
     *
     * @param string|null $service_category_id service_category_id
     *
     * @return self
     */
    public function setServiceCategoryId($service_category_id)
    {
        $this->container['service_category_id'] = $service_category_id;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name name
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets short_name
     *
     * @return string|null
     */
    public function getShortName()
    {
        return $this->container['short_name'];
    }

    /**
     * Sets short_name
     *
     * @param string|null $short_name short_name
     *
     * @return self
     */
    public function setShortName($short_name)
    {
        $this->container['short_name'] = $short_name;

        return $this;
    }

    /**
     * Gets access_key
     *
     * @return string|null
     */
    public function getAccessKey()
    {
        return $this->container['access_key'];
    }

    /**
     * Sets access_key
     *
     * @param string|null $access_key access_key
     *
     * @return self
     */
    public function setAccessKey($access_key)
    {
        $this->container['access_key'] = $access_key;

        return $this;
    }

    /**
     * Gets active
     *
     * @return bool|null
     */
    public function getActive()
    {
        return $this->container['active'];
    }

    /**
     * Sets active
     *
     * @param bool|null $active active
     *
     * @return self
     */
    public function setActive($active)
    {
        $this->container['active'] = $active;

        return $this;
    }

    /**
     * Gets maintenance
     *
     * @return bool|null
     */
    public function getMaintenance()
    {
        return $this->container['maintenance'];
    }

    /**
     * Sets maintenance
     *
     * @param bool|null $maintenance maintenance
     *
     * @return self
     */
    public function setMaintenance($maintenance)
    {
        $this->container['maintenance'] = $maintenance;

        return $this;
    }

    /**
     * Gets maintenance_ip_whitelist
     *
     * @return string|null
     */
    public function getMaintenanceIpWhitelist()
    {
        return $this->container['maintenance_ip_whitelist'];
    }

    /**
     * Sets maintenance_ip_whitelist
     *
     * @param string|null $maintenance_ip_whitelist maintenance_ip_whitelist
     *
     * @return self
     */
    public function setMaintenanceIpWhitelist($maintenance_ip_whitelist)
    {
        $this->container['maintenance_ip_whitelist'] = $maintenance_ip_whitelist;

        return $this;
    }

    /**
     * Gets mail_header_footer_id
     *
     * @return string|null
     */
    public function getMailHeaderFooterId()
    {
        return $this->container['mail_header_footer_id'];
    }

    /**
     * Sets mail_header_footer_id
     *
     * @param string|null $mail_header_footer_id mail_header_footer_id
     *
     * @return self
     */
    public function setMailHeaderFooterId($mail_header_footer_id)
    {
        $this->container['mail_header_footer_id'] = $mail_header_footer_id;

        return $this;
    }

    /**
     * Gets customer_group_id
     *
     * @return string|null
     */
    public function getCustomerGroupId()
    {
        return $this->container['customer_group_id'];
    }

    /**
     * Sets customer_group_id
     *
     * @param string|null $customer_group_id customer_group_id
     *
     * @return self
     */
    public function setCustomerGroupId($customer_group_id)
    {
        $this->container['customer_group_id'] = $customer_group_id;

        return $this;
    }

    /**
     * Gets hreflang_active
     *
     * @return bool|null
     */
    public function getHreflangActive()
    {
        return $this->container['hreflang_active'];
    }

    /**
     * Sets hreflang_active
     *
     * @param bool|null $hreflang_active hreflang_active
     *
     * @return self
     */
    public function setHreflangActive($hreflang_active)
    {
        $this->container['hreflang_active'] = $hreflang_active;

        return $this;
    }

    /**
     * Gets hreflang_default_domain_id
     *
     * @return string|null
     */
    public function getHreflangDefaultDomainId()
    {
        return $this->container['hreflang_default_domain_id'];
    }

    /**
     * Sets hreflang_default_domain_id
     *
     * @param string|null $hreflang_default_domain_id hreflang_default_domain_id
     *
     * @return self
     */
    public function setHreflangDefaultDomainId($hreflang_default_domain_id)
    {
        $this->container['hreflang_default_domain_id'] = $hreflang_default_domain_id;

        return $this;
    }

    /**
     * Gets analytics_id
     *
     * @return string|null
     */
    public function getAnalyticsId()
    {
        return $this->container['analytics_id'];
    }

    /**
     * Sets analytics_id
     *
     * @param string|null $analytics_id analytics_id
     *
     * @return self
     */
    public function setAnalyticsId($analytics_id)
    {
        $this->container['analytics_id'] = $analytics_id;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


